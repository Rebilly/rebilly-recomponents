// -----------------------------------------------------------------------------
// This file contains all styles related to the button component.
// -----------------------------------------------------------------------------

.r-btn {
    display: inline-block;
    height: auto;
    box-sizing: border-box;
    text-transform: capitalize;
    text-align: center;
    vertical-align: baseline;
    @include browser-prefix(user-select, none);
    @include browser-prefix(appearance, none);
    @include linear-gradient(#FFFFFF, $background);
    box-shadow: 0 0 0 1px $light-gray inset, 0 1px 2px 0 rgba($gray, 0.3);
    color: $text;
    cursor: pointer;
    border-radius: $border-radius;
    border: none;
    @include rem(padding, $space-s $space-m);
    font-family: $primary-font-stack;
    font-weight: $regular;
    @include rem(font-size, $paragraph);
    @include rem(line-height, $line-height);
    @include transition(box-shadow .15s ease);
    outline: none;

    &:hover {
        background: $background;
        text-decoration: none;
    }

    &:focus {
        box-shadow: 0 0 0 1px $blue inset, 0 0 0 1px $blue;
    }

    &:active {
        background: $background;
        box-shadow: 0 0 0 1px $light-gray inset, 0 1px 3px 1px $light-gray inset;
    }
}

/**
* Types
*/
.r-btn-primary {
    @include linear-gradient($blue, adjust-hue($blue, 30));
    color: #FFFFFF;
    box-shadow: 0 1px 2px 0 rgba($gray, 0.8);

    &:hover {
        background: adjust-hue($blue, 30);
    }

    &:focus {
        box-shadow: 0 0 0 1px darken($blue, 20) inset, 0 0 0 1px darken($blue, 20);
    }

    &:active {
        background: #3000D7;
        box-shadow: 0 1px 3px 1px darken($blue, 10) inset;
    }
}

.r-btn-danger {
    @include linear-gradient(saturate($red, 50), $red);
    color: #FFFFFF;
    box-shadow: 0 1px 2px 0 rgba($gray, 0.8);

    &:hover {
        background: darken($red, 5);
    }

    &:focus {
        box-shadow: 0 0 0 1px darken($red, 20) inset, 0 0 0 1px darken($red, 20);
    }

    &:active {
        background: darken($red, 10);
        box-shadow: 0 1px 3px 1px darken($red, 20) inset;
    }
}

.r-btn-link {
    color: $blue;
    vertical-align: baseline;
    padding: 0;
    background: none;
    box-shadow: none;

    &:hover {
        background: none;
        text-decoration: underline;
        box-shadow: none;
    }

    &:focus {
        box-shadow: 0 0 0 2px rgba($blue, 0.5);
    }

    &:active {
        background: none;
    }
}

.r-btn-basic {
    background: none;
    box-shadow: none;
    color: $muted;
}

.r-btn-basic-outline {
    background: none;
    box-shadow: 0 0 0 1px $light-gray inset;
    color: $muted;
}

.r-btn-basic-outline.is-error {
    background: $light-red;
    color: $red;
    box-shadow: 0 0 0 1px $red inset;

    & .icon {
        fill: $red;
    }
}

/**
* Disabled State
*/

//Default
.r-btn[disabled] {
    @include opacity(0.5);
    cursor: auto;

    &:hover {
        @include linear-gradient(#FFFFFF, $background);
    }

    &:active {
        box-shadow: 0 0 0 1px $light-gray inset, 0 1px 2px 0 rgba($gray, 0.3);
    }
}

//Primary
.r-btn.r-btn-primary[disabled] {
    &:hover {
        @include linear-gradient($blue, adjust-hue($blue, 30));
    }

    &:active {
        @include linear-gradient($blue, adjust-hue($blue, 30));
        box-shadow: 0 1px 2px 0 rgba($gray, 0.8);
    }
}

//Danger
.r-btn.r-btn-danger[disabled] {
    &:hover {
        @include linear-gradient(saturate($red, 50), $red);
    }

    &:active {
        @include linear-gradient(saturate($red, 50), $red);
        box-shadow: 0 1px 2px 0 rgba($gray, 0.8);
    }
}

/**
* Sizes
*/
.r-btn-s {
    @include rem(padding, $space-xs $space-m);
}

.r-btn-l {
    @include rem(padding, $space-m $space-l);
}

/**
* Variations
*/

//Fluid
.r-btn-fluid {
    width: 100%;
}

//Dropdown
.r-btn.r-btn-dropdown {
    position: relative;
    text-align: left;
}

.r-btn.r-btn-dropdown .icon {
    @include transition(transform .15s ease);
    @include rem(margin-left, $space-s);
}

.r-btn.r-btn-dropdown .icon.is-up {
    transform: none;
}

.r-btn.r-btn-dropdown.r-btn-fluid {
    @include rem(padding-right, $space-l);
}

.r-btn.r-btn-dropdown.r-btn-fluid .icon {
    position: absolute;
    top: $space-s;
    right: $space-s;
}

//Dropdown Link
.r-btn.r-btn-dropdown-link {
    color: $blue;
    background: none;
    border: none;
    padding: 0;
    border-radius: 0;
    line-height: $line-height - 1;
    box-shadow: none;
    border-bottom: 1px dashed;
    text-decoration: none;

    &:focus,
    &:active {
        border-bottom: 1px solid;
    }
}

.is-error .r-btn.r-btn-dropdown-link {
    border-bottom-color: $red;
    color: $red;
}

/**
* Groups
*/
.r-btn-group {
    @include display-flex;
    @include media-query-breakpoint('tablet', $type: max) {
        & > .r-btn {
            @include flex(1 0);
        }
    }
}

.r-btn-group .r-btn {
    @include rem(margin-left, -1px);
}

.r-btn-group .r-btn:not(:first-child):not(:last-child),
.r-btn-group .popper:not(:first-child):not(:last-child) .r-btn {
    border-radius: 0;
}

.r-btn-group .r-btn:first-child,
.r-btn-group .popper:first-child .r-btn{
    border-radius: $border-radius 0 0 $border-radius;
}

.r-btn-group .r-btn:last-child,
.r-btn-group .popper:last-child .r-btn{
    border-radius: 0 $border-radius $border-radius 0;
}

.r-btn-group.r-btn-group-fluid > .r-btn {
    @include flex(1 0);
}

.r-btn-group .r-btn.is-active {
    @include linear-gradient($blue, adjust-hue($blue, 30));
    color: #FFFFFF;
    box-shadow: 0 1px 2px 0 rgba($gray, 0.8);
}

/**
* Icons
*/
.r-btn.has-icon {
    @include rem(padding, $space-s);
}

.r-btn.has-icon.r-btn-l {
    @include rem(padding, $space-m $space-l);
}

.r-btn.has-icon.r-btn-s {
    @include rem(padding, $space-xs);
}

.r-btn.has-icon-left .icon {
    @include rem(margin-right, $space-s);
}

.r-btn.has-icon-right .icon {
    @include rem(margin-left, $space-s);
}

.r-btn.has-icon.r-btn-fitted {
    padding: 0;
}

//Colors
.r-btn-primary .icon,
.r-btn-danger .icon,
.r-btn-group .r-btn.is-active .icon {
    fill: #FFFFFF;
}

.r-btn-link .icon:not(.icon-) {
    fill: $blue;
}
