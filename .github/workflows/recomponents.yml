name: Pull Request
on:
  push:
    branches: [master]
  pull_request:
    types: [assigned, opened, synchronize, reopened]
jobs:
  setup:
    name: Install dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    env:
      NODE_ENV: test
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      working-directory: packages/recomponents
      run: |
        yarn
    - name: Compress directory
      run: zip -r directory.zip .
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: Directory
        path: ./directory.zip
  compile:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        node-version: [10.x]
    env:
      NODE_ENV: test
    steps:
    - name: Download artifact
      uses: actions/download-artifact@master
      with:
        name: Directory
        path: ./
    - name: Uncompress directory
      run: unzip directory.zip
    # - name: Restore symlinks
    #   run: |
    #     yarn
    - name: Build Recomponents 1
      run: |
        yarn workspace @rebilly/recomponents build
    - name: Build Recomponents 2
      working-directory: packages/recomponents
      run: |
        yarn build
    - name: Compress build directory
      run: zip -j -r recomponents.zip ./packages/recomponents/dist/
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: Recomponents
        path: ./recomponents.zip
    - name: Build Storybook
      run: |
        yarn workspace @rebilly/recomponents build-storybook
    - name: Compress storybook directory
      run: zip -r storybook.zip ./docs/
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: Storybook
        path: ./storybook.zip
  # test:
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   strategy:
  #     matrix:
  #       node-version: [10.x]
  #   env:
  #     NODE_ENV: test
  #   steps:
  #   - name: Download artifact
  #     uses: actions/download-artifact@master
  #     with:
  #       name: Directory
  #       path: ./
  #   - name: Uncompress directory
  #     run: unzip directory.zip
  #   - name: Restore symlinks
  #     run: |
  #       yarn
  #   - name: Run code linter
  #     run: |
  #       yarn workspace @rebilly/recomponents lint
  #   - name: Run unit tests
  #     run: |
  #       yarn workspace @rebilly/recomponents test
  # snapshot:
  #   name: Check snapshots
  #   runs-on: ubuntu-latest
  #   needs: [setup, compile]
  #   strategy:
  #     matrix:
  #       node-version: [10.x]
  #   env:
  #     NODE_ENV: test
  #   steps:
  #   - name: Download artifact
  #     uses: actions/download-artifact@master
  #     with:
  #       name: Directory
  #       path: ./
  #   - name: Uncompress directory
  #     run: unzip directory.zip
  #   - name: Restore symlinks
  #     run: |
  #       yarn
  #   - name: Download Storybook build
  #     uses: actions/download-artifact@master
  #     with:
  #       name: Storybook
  #       path: ./
  #   - name: Uncompress Storybook build
  #     run: unzip storybook.zip
  #   - name: Run snapshot tests
  #     run: |
  #       docker-compose -f ./packages/recomponents/.image-snapshots/docker-compose.yml up --build
  # ssr:
  #   name: Verify SSR
  #   runs-on: ubuntu-latest
  #   needs: [setup, compile]
  #   strategy:
  #     matrix:
  #       node-version: [10.x]
  #   env:
  #     NODE_ENV: test
  #   steps:
  #   - name: Download Directory artifact
  #     uses: actions/download-artifact@master
  #     with:
  #       name: Directory
  #       path: ./
  #   - name: Uncompress directory
  #     run: unzip directory.zip
  #   - name: Restore symlinks
  #     run: |
  #       yarn
  #   - name: Download Recomponents build
  #     uses: actions/download-artifact@master
  #     with:
  #       name: Recomponents
  #       path: ./
  #   - name: Uncompress Recomponents build
  #     run: unzip recomponents.zip -d packages/recomponents/dist
  #   - name: Build Nuxt application
  #     run: |
  #       yarn workspace recomponents-demo-nuxt build
  #   - name: Build Gridsome application
  #     run: |
  #       yarn workspace recomponents-demo-gridsome build
  # release:
  #   name: Semantic release
  #   runs-on: ubuntu-latest
  #   needs: [setup, compile, test, snapshot, ssr]
  #   strategy:
  #     matrix:
  #       node-version: [10.x]
  #   env:
  #     NODE_ENV: test
  #   steps:
  #   - name: Download artifact
  #     uses: actions/download-artifact@master
  #     with:
  #       name: Directory
  #       path: ./
  #   - name: Uncompress directory
  #     run: unzip directory.zip
  #   - name: Restore symlinks
  #     run: |
  #       yarn
  #   - name: Download Recomponents build
  #     uses: actions/download-artifact@master
  #     with:
  #       name: Recomponents
  #       path: ./
  #   - name: Uncompress Recomponents build
  #     run: unzip recomponents.zip -d packages/recomponents/dist
  #   - name: Semantic release
  #     run: |
  #       yarn workspace @rebilly/recomponents semantic-release
  